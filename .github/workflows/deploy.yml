name: Build and Deploy Craddock Connection website

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm install

      - name: Build Astro.js project
        run: npm run build

      - name: Setup CDK
        run: npm install -g aws-cdk@latest

      - name: Install CDK dependencies
        run: cd cdk && npm install

      - name: Bootstrap CDK
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: cd cdk && cdk bootstrap aws://${{ secrets.AWS_ACCOUNT_ID }}/us-east-1

      - name: Deploy with CDK
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          cd cdk 
          output=$(cdk deploy --require-approval never 2>&1)
          distribution_id=$(echo "$output" | grep 'CraddockConnectionStack.CfnOutDistributionId' | cut -d ' ' -f 3)
          echo "DISTRIBUTION_ID=$distribution_id" >> $GITHUB_ENV
          echo "${{ env.DISTRIBUTION_ID }}"

      - name: Configure AWS
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Invalidate CloudFront Cache
        run: |
          aws cloudfront create-invalidation --distribution-id ${{ env.DISTRIBUTION_ID }} --paths "/*"

      - name: Copy Files
        run: aws s3 sync ./dist s3://${{ secrets.S3_BUCKET_NAME }} --delete
