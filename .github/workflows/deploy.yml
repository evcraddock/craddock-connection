name: Build and Deploy Craddock Connection website

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install dependencies
        run: npm install

      - name: Build Astro.js project
        run: npm run build

      - name: Extract version from package.json
        id: get_version
        run: echo "::set-output name=version::$(node -p -e \"require('./package.json').version\")"

      - name: Set job ID
        id: get_job_id
        run: echo "::set-output name=job_id::${{ github.run_id }}"

      - name: Create version.job_id variable
        id: set_image_tag
        run: echo "::set-output name=image_tag::${{ steps.get_version.outputs.version }}.${{ steps.get_job_id.outputs.job_id }}"

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/craddock-connection:${{ steps.set_image_tag.outputs.image_tag }} .

      - name: Push Docker image to Docker Hub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/craddock-connection:${{ steps.set_image_tag.outputs.image_tag }}

      - name: Post to Webhook
        run: |
          curl -X POST -H "Content-Type: application/json" \
          -d '{"text":"Docker image pushed: ${{ secrets.DOCKER_USERNAME }}/craddock-connection:${{ steps.set_image_tag.outputs.image_tag }}"}' \
          # ${{ secrets.WEBHOOK_URL }}?tag=${{ steps.set_image_tag.outputs.image_tag }}
